name: Detect release

on:
  schedule:
    - cron: "14 13 * * *"
  workflow_dispatch:

jobs:
  watch:
    name: üî≠ Watch
    runs-on: ubuntu-latest

    outputs:
      hash: ${{ steps.commit.outputs.hash }}
      updated: ${{ steps.detect.outputs.result }}
      version: ${{ steps.release.outputs.version }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Load environment variables
        uses: k15g/action-load-env@v1

      - name: Fetch release info
        id: release
        uses: k15g/action-github-release-info@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          owner: schxslt
          repo: schxslt

      - uses: actions/github-script@v5
        id: detect
        with:
          result-encoding: json
          script: return "${{ steps.release.outputs.version }}" != "${{ env.SCHXSLT_VERSION }}"

      - name: Write version to environment
        if: steps.detect.outputs.result
        run: echo -n ${{ steps.release.outputs.version }} > .env/SCHXSLT_VERSION

      - name: Commit and push potential changes
        if: steps.detect.outputs.result
        uses: actions-js/push@master
        with:
          message: Detected version ${{ steps.release.outputs.version }}
          github_token: ${{ secrets.BOT_TOKEN }}
          branch: main
          author_name: ${{ secrets.BOT_USERNAME }}
          author_email: ${{ secrets.BOT_EMAIL }}

      - name: Expose commit hash
        id: commit
        run: echo "::set-output name=hash::$(git rev-parse HEAD)"

  release:
    name: üèÅ Release
    runs-on: ubuntu-latest
    environment: release
    needs:
      - watch
    if: needs.watch.outputs.updated

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ needs.watch.outputs.hash }}
          persist-credentials: false
          fetch-depth: 0

      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.BOT_TOKEN }}
          commit: main
          tag: v${{ needs.watch.outputs.version }}